{"version":3,"sources":["App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","grid","justifyContent","margin","cardm","padding","border","borderRadius","width","media","height","paddingTop","theme","createMuiTheme","typography","h2","h4","palette","background","default","primary","main","orange","secondary","green","App","console","warn","classes","useState","Images","setImages","setImageDB","loading","setLoading","ref","firestore","collection","limit","imgref","URL1","setURL1","URL2","setURL2","URL3","setURL3","URL4","setURL4","answer","setAnswer","reveal","setReveal","useEffect","get","then","item","items","docs","map","doc","data","PicAnswer","sbucket","storage","image","undefined","PicOneID","refFromURL","getDownloadURL","url","PicTwoID","PicThreeID","PicFourID","ThemeProvider","className","Typography","variant","Grid","container","spacing","xs","Card","elevation","CardMedia","id","style","display","Button","onClick","size","color","startIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wXAcAA,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAIX,IAAMC,EAAYC,YAAW,CAC3BC,KAAK,CACHC,eAAe,SACfC,OAAQ,MAEVC,MAAM,CACJC,QAAQ,QACRF,OAAO,QACPG,OAAO,EACPC,aAAc,GACdC,MAAM,QAERC,MAAO,CACLC,OAAQ,EACRC,WAAY,OACZR,OAAO,KACPG,OAAO,EACPC,aAAc,MAGZK,EAAQC,YAAe,CAC3BC,WAAY,CACVC,GAAI,CACFZ,OAAQ,QAEVa,GAAI,CACFb,OAAQ,SAGZc,QAAQ,CACNC,WAAW,CACTC,QAAQ,WAEVC,QAAQ,CACNC,KAAKC,IAAO,MAEdC,UAAU,CACRF,KAAKG,IAAM,SA0IFC,MArIf,WACEC,QAAQC,KAAO,aACf,IAAMC,EAAU7B,IAChB,EAA4B8B,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAcG,GAAd,WACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAAM5C,IAAS6C,YAAYC,WAAW,UAAUC,MAAM,GACtDC,EAAShD,IAAS6C,YAAYC,WAAW,eAC/C,EAAwBR,mBAAS,SAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,mBAAS,SAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAAwBd,mBAAS,SAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACA,EAAwBhB,mBAAS,SAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KACA,EAA4BlB,mBAAS,iBAArC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAA4BpB,oBAAS,GAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAqBAC,qBAAU,WAjBRlB,GAAW,GACXC,EAAIkB,MAAMC,MAAK,SAACC,GACd,IAAMC,EAAQD,EAAKE,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,UACzC7B,EAAUyB,GACVA,EAAME,KAAI,SAACH,GACTN,EAAUM,EAAKM,iBAKnB3B,GAAW,GACXK,EAAOc,MAAMC,MAAK,SAACC,GACjB,IAAMC,EAAQD,EAAKE,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,UACzC5B,EAAWwB,MAEbtB,GAAW,KAKV,IAEH,IAAM4B,EAAUvE,IAASwE,UAwBzB,OAvBAjC,EAAO4B,KAAI,SAACM,GAAD,YACWC,IAAnBD,EAAME,SACGJ,EAAQK,WAAW,+CAA+CH,EAAME,SAAS,QAAQE,iBAAiBd,MAAK,SAACe,GACxH5B,EAAQ4B,MACL5B,EAAQ,cACOwB,IAAnBD,EAAMM,SACGR,EAAQK,WAAW,+CAA+CH,EAAMM,SAAS,QAAQF,iBAAiBd,MAAK,SAACe,GACxH1B,EAAQ0B,MACL1B,EAAQ,cACSsB,IAArBD,EAAMO,WACGT,EAAQK,WAAW,+CAA+CH,EAAMO,WAAW,QAAQH,iBAAiBd,MAAK,SAACe,GAC1HxB,EAAQwB,MACLxB,EAAQ,cACQoB,IAApBD,EAAMQ,UACGV,EAAQK,WAAW,+CAA+CH,EAAMQ,UAAU,QAAQJ,iBAAiBd,MAAK,SAACe,GACzHtB,EAAQsB,MACLtB,EAAQ,YAOXd,EACK,4CAGL,cAACwC,EAAA,EAAD,CAAe7D,MAAOA,EAAtB,SACE,qBAAK8D,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAGE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGL,UAAW9C,EAAQ3B,KAA/C,UACG6B,EAAO4B,KAAI,SAACM,GAAD,OACR,cAACa,EAAA,EAAD,CAAMtB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAGR,UAAW9C,EAAQxB,MAAvC,SACI,cAAC+E,EAAA,EAAD,CACET,UAAW9C,EAAQnB,MACnBuD,MAAOxB,OAJQwB,EAAMoB,GAAK,SASrCtD,EAAO4B,KAAI,SAACM,GAAD,OACR,cAACa,EAAA,EAAD,CAAMtB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAGR,UAAW9C,EAAQxB,MAAvC,SACI,cAAC+E,EAAA,EAAD,CACAT,UAAW9C,EAAQnB,MACnBuD,MAAOtB,OAJUsB,EAAMoB,GAAK,SASrCtD,EAAO4B,KAAI,SAACM,GAAD,OACR,cAACa,EAAA,EAAD,CAAMtB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAGR,UAAW9C,EAAQxB,MAAvC,SACE,cAAC+E,EAAA,EAAD,CACET,UAAW9C,EAAQnB,MACnBuD,MAAOpB,OAJUoB,EAAMoB,GAAK,SASrCtD,EAAO4B,KAAI,SAACM,GAAD,OACR,cAACa,EAAA,EAAD,CAAMtB,MAAI,EAACyB,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAW,EAAGR,UAAW9C,EAAQxB,MAAvC,SACE,cAAC+E,EAAA,EAAD,CACET,UAAW9C,EAAQnB,MACnBuD,MAAOlB,OAJUkB,EAAMoB,GAAK,YAUxC,cAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAU,WAAWW,MAAOnC,EAAS,GAAK,CAAEoC,QAAS,QAA9E,SACKtC,IAEL,cAACuC,EAAA,EAAD,CACEC,QAAS,WA3DRrC,GAAVD,IA4DSuC,KAAK,QACLb,QAAQ,YACRc,MAAM,YACNC,UAAW,cAAC,IAAD,IALb,mCClLZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78fbc5a8.chunk.js","sourcesContent":["import React, { Component, MouseEvent , useEffect, useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/auth';\nimport Button from '@material-ui/core/Button';\nimport HelpIcon from '@material-ui/icons/Help';\nimport {makeStyles, ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport { orange, green } from '@material-ui/core/colors';\nimport 'fontsource-roboto';\nimport Typography from '@material-ui/core/Typography';\nimport { Card, CardMedia, Grid, Paper } from '@material-ui/core';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nfirebase.initializeApp({\n    apiKey: \"AIzaSyD1bXYZ7_zi8u6TioGcWGS-8a0qYGRYieE\",\n    authDomain: \"reactappdemo2.firebaseapp.com\",\n    projectId: \"reactappdemo2\",\n    storageBucket: \"reactappdemo2.appspot.com\",\n    messagingSenderId: \"379964218330\",\n    appId: \"1:379964218330:web:0081c40209caf9c4f8bee3\"\n\n});\n\nconst useStyles = makeStyles({\n  grid:{\n    justifyContent:'center',\n    margin: '2%',\n  },\n  cardm:{\n    padding:'0.01%',\n    margin:'0.01%',\n    border:0,\n    borderRadius: 15,\n    width:'auto',\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%', // 16:9\n    margin:'1%',\n    border:0,\n    borderRadius: 15,\n  },\n})\nconst theme = createMuiTheme({\n  typography: {\n    h2: {\n      margin: '30px',\n    },\n    h4: {\n      margin: '10px',\n    }\n  },\n  palette:{\n    background:{\n      default:'#282c34',\n    },\n    primary:{\n      main:orange[500],\n    },\n    secondary:{\n      main:green[500],\n    }\n  }\n})\n\nfunction App() {\n  console.warn = () => {};\n  const classes = useStyles();\n  const [Images, setImages] = useState([] as any);\n  const [Imgdb, setImageDB] = useState([] as any);\n  const [loading, setLoading] = useState(false);\n  const ref = firebase.firestore().collection(\"Images\").limit(1);\n  const imgref = firebase.firestore().collection(\"ImgLocation\");\n  const [URL1, setURL1] = useState(\"blank\");\n  const [URL2, setURL2] = useState(\"blank\");\n  const [URL3, setURL3] = useState(\"blank\");\n  const [URL4, setURL4] = useState(\"blank\");\n  const [answer, setAnswer] = useState(\"Not Available\");\n  const [reveal, setReveal] = useState(false);\n\n\n  function getImages(){\n    setLoading(true);\n    ref.get().then((item) => {\n      const items = item.docs.map((doc) => doc.data());\n      setImages(items);\n      items.map((item)=>{\n        setAnswer(item.PicAnswer)\n      });\n    })\n  }\n  function getImgdb(){\n    setLoading(true);\n    imgref.get().then((item) => {\n      const items = item.docs.map((doc) => doc.data());\n      setImageDB(items);\n    });\n    setLoading(false);\n  }\n  useEffect(()=> {\n    getImages();\n    getImgdb();\n  }, []);\n  let ref1:any;\n  const sbucket = firebase.storage();\n  Images.map((image)=>(\n    (image.PicOneID !== undefined)?\n      (ref1 = sbucket.refFromURL('gs://reactappdemo2.appspot.com/images/bonus_'+image.PicOneID+'.jpg').getDownloadURL().then((url) => {\n      setURL1(url);\n    })):(setURL1(\"blank\")),\n    (image.PicTwoID !== undefined)?\n      (ref1 = sbucket.refFromURL('gs://reactappdemo2.appspot.com/images/bonus_'+image.PicTwoID+'.jpg').getDownloadURL().then((url) => {\n      setURL2(url);\n    })):(setURL2(\"blank\")),\n    (image.PicThreeID !== undefined)?\n      (ref1 = sbucket.refFromURL('gs://reactappdemo2.appspot.com/images/bonus_'+image.PicThreeID+'.jpg').getDownloadURL().then((url) => {\n      setURL3(url);\n    })):(setURL3(\"blank\")),\n    (image.PicFourID !== undefined)?\n      (ref1 = sbucket.refFromURL('gs://reactappdemo2.appspot.com/images/bonus_'+image.PicFourID+'.jpg').getDownloadURL().then((url) => {\n      setURL4(url);\n    })):(setURL4(\"blank\"))\n  ));\n\n  function ansToggle(){\n    (reveal) ? setReveal(false) : setReveal(true);\n  }\n\n  if (loading){\n    return <h1>Loading...</h1>\n  } else{\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n          <Typography variant=\"h2\">\n            Guess the word?\n          </Typography>\n            <Grid container spacing={2} className={classes.grid}>\n              {Images.map((image) => (\n                  <Grid item xs={2} key={image.id + \"_1\"}>\n                    <Card elevation={3} className={classes.cardm}>\n                        <CardMedia\n                          className={classes.media}\n                          image={URL1}\n                        />\n                    </Card>\n                  </Grid>\n              ))}\n              {Images.map((image) => (\n                  <Grid item xs={2} key={image.id + \"_2\"}>\n                    <Card elevation={3} className={classes.cardm}>\n                        <CardMedia\n                        className={classes.media}\n                        image={URL2}\n                        />\n                    </Card>\n                  </Grid>\n              ))}\n              {Images.map((image) => (\n                  <Grid item xs={2} key={image.id + \"_3\"}>\n                    <Card elevation={3} className={classes.cardm}>\n                      <CardMedia\n                        className={classes.media}\n                        image={URL3}\n                        />\n                    </Card>\n                  </Grid>\n              ))}\n              {Images.map((image) => (\n                  <Grid item xs={2} key={image.id + \"_4\"}>\n                    <Card elevation={3} className={classes.cardm}>\n                      <CardMedia\n                        className={classes.media}\n                        image={URL4}\n                        />\n                    </Card>\n                  </Grid>\n              ))}\n            </Grid>\n            <Typography variant='h4' className='ansclass' style={reveal ? {} : { display: 'none' }}>\n                {answer}\n            </Typography>\n            <Button\n              onClick={() => { ansToggle() }}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"secondary\"\n              startIcon={<HelpIcon />}>\n              Reveal Answer\n            </Button>\n          </header>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}